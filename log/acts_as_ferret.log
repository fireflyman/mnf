# Logfile created on Fri Aug 13 16:44:54 +0800 2010 by /
Will use local index.
Will use local index.
using index in C:/work/mnf/index/development/topic
[topic] rebuild index with models: []
[topic] reopening index at C:/work/mnf/index/development/topic
[topic] register class Topic with index topic
[topic] default field list for index topic: [:title, :body, :author]
using index in C:/work/mnf/index/development/reply
[reply] rebuild index with models: []
[reply] reopening index at C:/work/mnf/index/development/reply
[reply] register class Reply with index reply
[reply] default field list for index reply: [:title, :body, :author]
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
[reply] register class Reply with index reply
[reply] refusing re-registration of class Reply
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
[reply] register class Reply with index reply
[reply] refusing re-registration of class Reply
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
[reply] register class Reply with index reply
[reply] refusing re-registration of class Reply
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
[reply] register class Reply with index reply
[reply] refusing re-registration of class Reply
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
index_for [Topic(id: integer, title: string, body: text, forum_id: integer, created_at: datetime, updated_at: datetime, replies_count: integer, hits: integer, sticky: integer)]
options: {:offset=>nil, :limit=>nil}
ar_options: {}
[topic] stored_fields: nil
[topic] query: In the futrue I know I was wrong
-->+(+(title:futrue body:futrue author:futrue) +(title:know body:know author:know) +(title:wrong body:wrong author:wrong)) +(class_name:Topic)
[topic] now retrieving records from AR with options: {}
[topic] 0 results from AR: []
Query: In the futrue I know I was wrong
total hits: 0, results delivered: 0
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
index_for [Topic(id: integer, title: string, body: text, forum_id: integer, created_at: datetime, updated_at: datetime, replies_count: integer, hits: integer, sticky: integer)]
options: {:offset=>nil, :limit=>nil}
ar_options: {}
[topic] stored_fields: nil
[topic] query: In the futrue I know I was wrong
-->+(+(title:futrue body:futrue author:futrue) +(title:know body:know author:know) +(title:wrong body:wrong author:wrong)) +(class_name:Topic)
[topic] now retrieving records from AR with options: {}
[topic] 0 results from AR: []
Query: In the futrue I know I was wrong
total hits: 0, results delivered: 0
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
index_for [Topic(id: integer, title: string, body: text, forum_id: integer, created_at: datetime, updated_at: datetime, replies_count: integer, hits: integer, sticky: integer)]
options: {:offset=>nil, :limit=>nil}
ar_options: {}
[topic] stored_fields: nil
[topic] query: In
-->+() +(class_name:Topic)
[topic] now retrieving records from AR with options: {}
[topic] 0 results from AR: []
Query: In
total hits: 0, results delivered: 0
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
[reply] register class Reply with index reply
[reply] refusing re-registration of class Reply
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
index_for [Topic(id: integer, title: string, body: text, forum_id: integer, created_at: datetime, updated_at: datetime, replies_count: integer, hits: integer, sticky: integer)]
options: {:offset=>nil, :limit=>nil}
ar_options: {}
[topic] stored_fields: nil
[topic] query: tk
-->+(title:tk body:tk author:tk) +(class_name:Topic)
[topic] now retrieving records from AR with options: {}
[topic] 0 results from AR: []
Query: tk
total hits: 0, results delivered: 0
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
index_for [Topic(id: integer, title: string, body: text, forum_id: integer, created_at: datetime, updated_at: datetime, replies_count: integer, hits: integer, sticky: integer)]
options: {:offset=>nil, :limit=>nil}
ar_options: {}
[topic] stored_fields: nil
[topic] query: 1
-->+(title:1 body:1 author:1) +(class_name:Topic)
[topic] now retrieving records from AR with options: {}
[topic] 0 results from AR: []
Query: 1
total hits: 0, results delivered: 0
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
index_for [Topic(id: integer, title: string, body: text, forum_id: integer, created_at: datetime, updated_at: datetime, replies_count: integer, hits: integer, sticky: integer)]
options: {:offset=>nil, :limit=>nil}
ar_options: {}
[topic] stored_fields: nil
[topic] query: 2
-->+(title:2 body:2 author:2) +(class_name:Topic)
[topic] now retrieving records from AR with options: {}
[topic] 0 results from AR: []
Query: 2
total hits: 0, results delivered: 0
[topic] register class Topic with index topic
[topic] refusing re-registration of class Topic
index_for [Topic(id: integer, title: string, body: text, forum_id: integer, created_at: datetime, updated_at: datetime, replies_count: integer, hits: integer, sticky: integer)]
options: {:offset=>nil, :limit=>nil}
ar_options: {}
[topic] stored_fields: nil
[topic] query: 2
-->+(title:2 body:2 author:2) +(class_name:Topic)
[topic] now retrieving records from AR with options: {}
[topic] 0 results from AR: []
Query: 2
total hits: 0, results delivered: 0
